/**
 * ******************************************************************************
 * Copyright (c) 2022 Todo 1. All rights reserved.
 * Contributors: prueba
 * *****************************************************************************
 */
package com.riosoft.contabilidad.rest.impl;

import javax.ws.rs.core.Response;

import org.apache.log4j.Logger;

import com.riosoft.contabilidad.facade.CompraFacade;
import com.riosoft.contabilidad.rest.CompraRest;
import com.riosoft.util.JsonUtil;

/**
 * @author Oljer Cando
 */
public class CompraRestImpl implements CompraRest {
    private final Logger log = Logger.getLogger(this.getClass());
    private final JsonUtil jsonUtil = new JsonUtil();
    
    @EJB(lookup = "java:global/esacc-core-ejb/ServicioOpcionPerfilImpl!ec.gob.cce.esacc.seguridad.servicio.ServicioOpcionPerfil")
    private CompraFacade compraFacade;

    @Override
    public Response obtenerAccion(String param) {
        final ResponseDTO<List<AccionDTO>> respuesta = new ResponseDTO<>();
        try {
            final JsonObject data = this.jsonUtil.getJson(param);
            final List<AccionDTO> lAccion = this.servicioAccion.obtenerAccion(data.get("origen").getAsString());
            if (lAccion != null) {
                respuesta.setTipoMensaje(TipoMensaje.EXITO.toString());
            } else {
                respuesta.setTipoMensaje(TipoMensaje.INFORMACION.toString());
            }
            respuesta.setDato(lAccion);
            return Response.status(Response.Status.OK).entity(respuesta).build();
        } catch (final GenericException e) {
            String mensaje = e.getMessage();
            if ((null != e.getInfo()) && !e.getInfo().isEmpty()) {
                mensaje = e.getMessage() + " Datos: [ " + e.getInfo() + " ]";
            }
            respuesta.setMensaje(mensaje);
            respuesta.setTipoMensaje(TipoMensaje.ERROR.toString());
            if (null != e.getCause()) {
                this.log.error(mensaje, e);
            }
            return Response.status(Response.Status.INTERNAL_SERVER_ERROR).entity(respuesta).build();
        } catch (final Exception e) {
            respuesta.setMensaje("Los datos de entrada no son v√°lidos");
            respuesta.setTipoMensaje(TipoMensaje.ERROR.toString());
            if (null != e.getCause()) {
                this.log.error(e.getMessage(), e);
            }
            return Response.status(Response.Status.INTERNAL_SERVER_ERROR).entity(respuesta).build();
        }
    }

}
