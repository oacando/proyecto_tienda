/**
 * ******************************************************************************
 * Copyright (c) 2022 Todo 1. All rights reserved.
 * * Contributors:
 * * prueba ocando
 * *****************************************************************************
 */
package com.riosoft.util;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;


/**
 * @author Oljer Cando
 */
public class DateUtil {
    private static final Locale LOCALE_EC = new Locale("es", "ES");
    /**
     * Permite dar formato a un objeto {@code Date}
     *
     * @author segundo.sagnay
     * @history 11 nov. 2019 - 09:47:24 segundo
     *          Versión inicial.
     * @param fecha
     *            Objeto {@code Date}
     * @param formato
     *            Formato de la fecha/hora
     *            <ul>
     *            <li>dd/MM/yyyy</li>
     *            <li>dd/MM/yyyy HH:mm</li>
     *            <li>yyyy-MM-dd</li>
     *            <li>yyyy-MM-dd HH:mm</li>
     *            <li>HH:mm</li>
     *            <li>etc</li>
     *            </ul>
     * @return Fecha/hora con formato
     * @throws ParseException
     */
    public static String fechaHoraConFormato(Date fecha, String formato) {
        return formato(formato).format(fecha);
    }

    /**
     * Permite transformar un objeto {@code Date} a un formato de fecha y hora
     *
     * @author segundo.sagnay
     * @history 16 sep. 2019 - 15:43:51 segundo.sagnay
     *          Versión inicial.
     * @param fecha
     *            Fecha
     * @return Fecha con formato Ejm: 12 marzo de 2019, a las 09:52
     */
    public static String fechaHoraLarga(Date fecha) {
        return formato("dd MMMM 'de' yyyy, 'a las' HH:mm").format(fecha);
    }

    /**
     * Permite transformar un objeto {@code Date} a un formato de fecha
     *
     * @author segundo.sagnay
     * @history 11 nov. 2019 - 09:33:39 segundo
     *          Versión inicial.
     * @param fecha
     *            Fecha
     * @return Fecha con formato Ejm: 12 marzo de 2019
     */
    public static String fechaLarga(Date fecha) {
        return formato("dd MMMM 'de' yyyy").format(fecha);
    }

    /**
     * Genera un {@code SimpleDateFormat} a partir de un formato especifico.
     *
     * @author segundo.sagnay
     * @history 12 sep. 2019 - 15:08:30 segundo.sagnay
     *          Versión inicial.
     * @param formato
     *            Formato de fecha
     * @return {@code SimpleDateFormat}
     */
    private static final SimpleDateFormat formato(String formato) {
        return new SimpleDateFormat(formato, LOCALE_EC);
    }

    /**
     * Permite dar formato a un objeto {@code Date}
     *
     * @author segundo.sagnay
     * @history 11 nov. 2019 - 09:55:37 segundo
     *          Versión inicial.
     * @param fecha
     * @return Hora en formato HHhmm Ejm: 09h25
     */
    public static String hora(Date fecha) {
        return formato("HH'h'mm").format(fecha);
    }

    /**
     * Permite transformar una fecha a texto largo
     *
     * @author segundo.sagnay
     * @history 14 oct. 2020 - 18:10:14 segundo.sagnay
     *          Versión inicial.
     * @param fecha
     *            Fecha a transformar
     * @return {@code 14/10/2020 -> catorce días del mes octubre de dos mil veinte}
     */
    public static String obtenerFechaLetras(Date fecha) {
        final Calendar cal = Calendar.getInstance();
        final CustomUtil util = new CustomUtil();
        cal.setTime(fecha);
        final String anio = util.convertirLetrasAnio(cal.get(Calendar.YEAR)).trim();
        final SimpleDateFormat formatoMes = new SimpleDateFormat("MMMM", LOCALE_EC);
        final String mes = formatoMes.format(fecha);
        final String dia = util.convertirLetras(cal.get(Calendar.DAY_OF_MONTH)).trim();
        return String.format("%s días del mes de %s de %s", dia, mes, anio);
    }

    /**
     * Permite dar formato a una fecha de actuación
     *
     * @author segundo
     * @history 25 nov. 2020 - 09:51:51 segundo
     *          Versión inicial.
     * @param fecha
     *            Fecha de actuación
     * @return {@code 25/11/2020 -> veintecinco de noviembre de 2020}
     */
    public static String obtenerFechaLetrasActuacion(Date fecha) {
        final Calendar cal = Calendar.getInstance();
        final CustomUtil util = new CustomUtil();
        cal.setTime(fecha);
        final SimpleDateFormat formatoMes = new SimpleDateFormat("MMMM", LOCALE_EC);
        final String mes = formatoMes.format(fecha);
        final String dia = util.convertirLetras(cal.get(Calendar.DAY_OF_MONTH)).trim();
        return String.format("%s de %s de %s", dia, mes, cal.get(Calendar.YEAR));
    }

    /**
     * Permite generar la fecha para la razón de suscripción
     *
     * @author segundo.sagnay
     * @history 29 ene. 2021 - 15:51:32 segundo.sagnay
     *          Versión inicial.
     * @param fecha
     * @return Fecha en formato: viernes veintinueve de enero de dos mil veintiuno
     */
    public static String obtenerFechaRazonSuscricion(Date fecha) {
        final Calendar cal = Calendar.getInstance();
        final CustomUtil util = new CustomUtil();
        cal.setTime(fecha);
        final String anio = util.convertirLetrasAnio(cal.get(Calendar.YEAR)).trim();
        final SimpleDateFormat formatoMes = new SimpleDateFormat("MMMM", LOCALE_EC);
        final SimpleDateFormat formatoDia = new SimpleDateFormat("EEEE", LOCALE_EC);
        final String mes = formatoMes.format(fecha);
        final String dia = util.convertirLetras(cal.get(Calendar.DAY_OF_MONTH)).trim();
        final String nombreDia = formatoDia.format(fecha);
        return String.format("%s %s de %s de %s", nombreDia, dia, mes, anio);
    }

    /**
     * Permite transformar una fecha desde una cadena a un objeto {@code Date}
     *
     * @author segundo.sagnay
     * @history 12 sep. 2019 - 14:59:02 segundo.sagnay
     *          Versión inicial.
     * @param fecha
     *            Fecha en formato de cadena
     * @param formato
     *            Formato de la fecha
     *            <ul>
     *            <li>dd/MM/yyyy</li>
     *            <li>dd/MM/yyyy HH:mm</li>
     *            <li>yyyy-MM-dd</li>
     *            <li>yyyy-MM-dd HH:mm</li>
     *            <li>etc</li>
     *            </ul>
     * @return Fecha parseada {@code Date}
     * @throws ParseException
     */
    public static Date parse(String fecha, String formato) throws ParseException {
        return formato(formato).parse(fecha);
    }

    /**
     * Permite transformar una fecha desde una cadena un objeto {@code Date}
     *
     * @author oljer.cando
     * @history 12 sep. 2019 - 15:14:08 segundo.sagnay
     *          Versión inicial.
     * @param fecha
     *            Fecha en el formato {@code dd/MM/yyyy}
     * @return Fecha parseada {@code Date}
     * @throws ParseException
     */
    public static Date parseDesdeFechaCorta(String fecha) throws ParseException {
        return formato("dd/MM/yyyy").parse(fecha);
    }

    /**
     * Permite transformar una fecha desde una cadena un objeto {@code Date}
     *
     * @author segundo.sagnay
     * @history 12 sep. 2019 - 15:23:33 segundo.sagnay
     *          Versión inicial.
     * @param fecha
     *            Fecha en el formato {@code yyyy-MM-dd}
     * @return Fecha parseada {@code Date}
     * @throws ParseException
     */
    public static Date parseDesdeFechaCortaGuion(String fecha) throws ParseException {
        return formato("yyyy-MM-dd").parse(fecha);
    }

    /**
     * Permite transformar una fecha desde una cadena un objeto {@code Date}
     *
     * @author segundo.sagnay
     * @history 12 sep. 2019 - 15:14:04 segundo.sagnay
     *          Versión inicial.
     * @param fecha
     *            Fecha en el formato {@code dd/MM/yyyy HH:mm}
     * @return Fecha parseada {@code Date}
     * @throws ParseException
     */
    public static Date parseDesdeFechaHoraCorta(String fecha) throws ParseException {
        return formato("dd/MM/yyyy HH:mm").parse(fecha);
    }


    
    /**
     * Permite transformar una fecha desde una cadena un objeto {@code Date}
     *
     * @author Oljer Cando
     * @history 8 mar. 2022 - 19:06:05 Oljer Cando
     * Versión inicial.
     * @param fecha
     * @return Fecha parseada {@code Date}
     * @throws ParseException
     */
    public static Date parseDesdeFechaHoraCortaGuion(String fecha) throws ParseException {
        return formato("yyyy-MM-dd HH:mm").parse(fecha);
    }

    private DateUtil() {
    }
}
